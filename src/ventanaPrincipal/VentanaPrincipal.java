/*
 * Ventana principal esta contendra el CRUD completo y el listados de los usuarios
 * registrados
 */
package ventanaPrincipal;

//libretias
import ConexioOracle.Conexion;
import javax.swing.ImageIcon;
import VentanaLogin.Login;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Napster Guerlmy Alexander Nu√±ez Matricula 2021-0466
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    private String user;

    public VentanaPrincipal() {
        initComponents();
        
        //En el metodo constructor 
        CargarTabla();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/pokeball.png")).getImage());
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsuarios = new javax.swing.JTable();
        btnNuevoRegistro = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrarSeccion = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtUsuarioMain = new javax.swing.JTextField();
        passPasswordMain = new javax.swing.JPasswordField();
        passRepetirPasswordMain = new javax.swing.JPasswordField();
        txtPrimerNombreMain = new javax.swing.JTextField();
        txtSegundoNombreMain = new javax.swing.JTextField();
        txtPrimerApellidoMain = new javax.swing.JTextField();
        txtSegundoApellidoMain = new javax.swing.JTextField();
        txtNumeroCellMain = new javax.swing.JTextField();
        txtEmailMain = new javax.swing.JTextField();
        lbPrimerApellidoMain = new javax.swing.JLabel();
        lbSegundoApellidoMain = new javax.swing.JLabel();
        lbNumeroCellMain = new javax.swing.JLabel();
        lbCorreoMain = new javax.swing.JLabel();
        laSegundoNombreMain = new javax.swing.JLabel();
        lbPrimerNombreMain = new javax.swing.JLabel();
        lbRepetirPasswordMain = new javax.swing.JLabel();
        lbPasswordMain = new javax.swing.JLabel();
        lbUsuarioMain = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Usuarios Registrados");
        setSize(new java.awt.Dimension(850, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USUARIOS", "PASSWORD", "P. NOMBRE ", "S. NOMBRE", "P. APELLIDO", "S. APELLIDO", "NUMERO CELL", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUsuarios.getTableHeader().setReorderingAllowed(false);
        tableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUsuarios);
        if (tableUsuarios.getColumnModel().getColumnCount() > 0) {
            tableUsuarios.getColumnModel().getColumn(0).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(1).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(2).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(3).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(4).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(5).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(6).setResizable(false);
            tableUsuarios.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 720, 120));

        btnNuevoRegistro.setBackground(new java.awt.Color(0, 51, 204));
        btnNuevoRegistro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNuevoRegistro.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevoRegistro.setText("NUEVO");
        btnNuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoRegistroActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevoRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 130, 50));

        btnActualizar.setBackground(new java.awt.Color(0, 51, 204));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 130, 50));

        btnEliminar.setBackground(new java.awt.Color(0, 51, 204));
        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 130, 50));

        btnCerrarSeccion.setBackground(new java.awt.Color(0, 51, 204));
        btnCerrarSeccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCerrarSeccion.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrarSeccion.setText("CERRAR SECCION");
        btnCerrarSeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSeccionActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrarSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 130, 50));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUsuarioMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUsuarioMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtUsuarioMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 470, 30));

        passPasswordMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passPasswordMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passPasswordMainActionPerformed(evt);
            }
        });
        jPanel2.add(passPasswordMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 180, 30));

        passRepetirPasswordMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(passRepetirPasswordMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 180, 30));

        txtPrimerNombreMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrimerNombreMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrimerNombreMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtPrimerNombreMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 180, 30));

        txtSegundoNombreMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSegundoNombreMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSegundoNombreMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtSegundoNombreMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 180, 30));

        txtPrimerApellidoMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrimerApellidoMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrimerApellidoMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtPrimerApellidoMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 210, 30));

        txtSegundoApellidoMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSegundoApellidoMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSegundoApellidoMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtSegundoApellidoMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 210, 30));

        txtNumeroCellMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNumeroCellMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroCellMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtNumeroCellMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 210, 30));

        txtEmailMain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEmailMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailMainActionPerformed(evt);
            }
        });
        jPanel2.add(txtEmailMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 210, 30));

        lbPrimerApellidoMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPrimerApellidoMain.setText("P. Apellido");
        jPanel2.add(lbPrimerApellidoMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 60, 20));

        lbSegundoApellidoMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbSegundoApellidoMain.setText("S. Apellido");
        jPanel2.add(lbSegundoApellidoMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 60, 20));

        lbNumeroCellMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNumeroCellMain.setText("No. Cell.");
        jPanel2.add(lbNumeroCellMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 60, 20));

        lbCorreoMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCorreoMain.setText("Email");
        jPanel2.add(lbCorreoMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 60, 20));

        laSegundoNombreMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        laSegundoNombreMain.setText("S. Nombre");
        jPanel2.add(laSegundoNombreMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 70, 20));

        lbPrimerNombreMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPrimerNombreMain.setText("P. Nombre");
        jPanel2.add(lbPrimerNombreMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 20));

        lbRepetirPasswordMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbRepetirPasswordMain.setText("R. Password");
        jPanel2.add(lbRepetirPasswordMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, 20));

        lbPasswordMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbPasswordMain.setText("Password");
        jPanel2.add(lbPasswordMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 60, 20));

        lbUsuarioMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbUsuarioMain.setText("Usuario");
        jPanel2.add(lbUsuarioMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 50, 20));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 580, 230));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoVentanaPrincipal.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 850, 530));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoRegistroActionPerformed

        if (ValidarCampos()) {
            String usuario = txtUsuarioMain.getText();
            String clave = String.valueOf(passPasswordMain.getPassword());
            String nombre1 = txtPrimerNombreMain.getText();
            String nombre2 = txtSegundoNombreMain.getText();
            String apellido1 = txtPrimerApellidoMain.getText();
            String apellido2 = txtSegundoApellidoMain.getText();
            String numeroTel = txtNumeroCellMain.getText();
            String correoElectronico = txtEmailMain.getText();

            try {
                Connection con;
                con = Conexion.getConnection();
                PreparedStatement preparaConsulta = con.prepareStatement("INSERT INTO usuarios (nombre_usuario, clave, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, numero_telefono, email) VALUES (?,?,?,?,?,?,?,?)");
                preparaConsulta.setString(1, usuario);
                preparaConsulta.setString(2, clave);
                preparaConsulta.setString(3, nombre1);
                preparaConsulta.setString(4, nombre2);
                preparaConsulta.setString(5, apellido1);
                preparaConsulta.setString(6, apellido2);
                preparaConsulta.setString(7, numeroTel);
                preparaConsulta.setString(8, correoElectronico);

                preparaConsulta.execute();
                con.commit();
                con.close();
                CargarTabla();
                Limpiar();                            
                JOptionPane.showMessageDialog(null, "EL USUARIO FUE REGISTRADO CON EXITO");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "El NOMBRE DE USUARIO NO ESTA DISPONIBLE\n INTENTE CON OTRO");
            }

        }
    }//GEN-LAST:event_btnNuevoRegistroActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

        if (ValidarCampos()) {
            String usuario = txtUsuarioMain.getText();
            String clave = String.valueOf(passPasswordMain.getPassword());
            String nombre1 = txtPrimerNombreMain.getText();
            String nombre2 = txtSegundoNombreMain.getText();
            String apellido1 = txtPrimerApellidoMain.getText();
            String apellido2 = txtSegundoApellidoMain.getText();
            String numeroTel = txtNumeroCellMain.getText();
            String correoElectronico = txtEmailMain.getText();
            this.user = txtUsuarioMain.getText();

            try {

                Connection conPrueva = Conexion.getConnection();
                PreparedStatement prepararConsultaPrueva = conPrueva.prepareStatement("SELECT * FROM usuarios WHERE nombre_usuario = ?");
                prepararConsultaPrueva.setString(1, usuario);
                ResultSet resultadoPrueva = null;
                resultadoPrueva = prepararConsultaPrueva.executeQuery();
                conPrueva.commit();

                if (resultadoPrueva.next()) {
                    Connection con = Conexion.getConnection();
                    PreparedStatement preparaConsulta = con.prepareStatement("UPDATE usuarios SET nombre_usuario = ?, clave = ?, primer_nombre = ?, segundo_nombre = ?, primer_apellido = ?, segundo_apellido = ?, numero_telefono = ?, email = ? WHERE nombre_usuario = ?");
                    preparaConsulta.setString(1, usuario);
                    preparaConsulta.setString(2, clave);
                    preparaConsulta.setString(3, nombre1);
                    preparaConsulta.setString(4, nombre2);
                    preparaConsulta.setString(5, apellido1);
                    preparaConsulta.setString(6, apellido2);
                    preparaConsulta.setString(7, numeroTel);
                    preparaConsulta.setString(8, correoElectronico);
                    preparaConsulta.setString(9, this.user);

                    preparaConsulta.execute();
                    JOptionPane.showMessageDialog(null, "USUARIO ACTUALIZADO");
                    con.commit();
                    con.close();
                    CargarTabla();
                    Limpiar();
                }else{
                    JOptionPane.showMessageDialog(null, "EL USUARIO QUE INTENTA ACTUALIZAR NO EXISTE");
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());

            }

        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCerrarSeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSeccionActionPerformed
        Login formularioLogin = new Login();
        formularioLogin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarSeccionActionPerformed

    private void txtPrimerNombreMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrimerNombreMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrimerNombreMainActionPerformed

    private void txtUsuarioMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioMainActionPerformed

    private void txtSegundoNombreMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSegundoNombreMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSegundoNombreMainActionPerformed

    private void txtPrimerApellidoMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrimerApellidoMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrimerApellidoMainActionPerformed

    private void txtSegundoApellidoMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSegundoApellidoMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSegundoApellidoMainActionPerformed

    private void txtNumeroCellMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroCellMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroCellMainActionPerformed

    private void txtEmailMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailMainActionPerformed

    private void passPasswordMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passPasswordMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passPasswordMainActionPerformed

    private void tableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUsuariosMouseClicked
        
        // Para hacer cilp en una fila de la tabla 
        try {
            //Creamos un variable de tipo entero y le pasamos la fila seleccionada
            int fila = tableUsuarios.getSelectedRow();
            
            //para obtener el dato de la primera columna en este caso llamada USUARIOS
            // se guarda en una variable de tipo String lo que este en la tabla(fila:tal, Colummna:0)
            String usuario = String.valueOf(tableUsuarios.getValueAt(fila, 0));    // Nota: Convertir a String un entero String.valueOf (Integer (123)); .
            
            //This.use es para copiar el dato de usuarios asi poder usarlo a la hora de actualizar registro
            this.user = usuario;
            
            //Luego de tener el usuario seleccionado de la tabla del formulari hacemos un select con el para rellenar los demas txt 
            PreparedStatement prepararConsulta;
            ResultSet resultado;

            Connection con = Conexion.getConnection();
            prepararConsulta = con.prepareStatement("SELECT * FROM usuarios WHERE nombre_usuario = ?");
            prepararConsulta.setString(1, usuario);
            resultado = prepararConsulta.executeQuery();
            
            //Con un while recorremos el ResultSet para ir asignando cada columna de Oracle en un Txt Field
            //Menos en los campos password
            while (resultado.next()) {
                
                //Con el Metodo getString() pasando le el nombre de la columna
                //utilizando el objeto ResultSet le pasamos al metodo setText
                //del objeto Txt Field
                txtUsuarioMain.setText(resultado.getString("nombre_usuario"));
                txtPrimerNombreMain.setText(resultado.getString("primer_nombre"));
                txtSegundoNombreMain.setText(resultado.getString("segundo_nombre"));
                txtPrimerApellidoMain.setText(resultado.getString("primer_apellido"));
                txtSegundoApellidoMain.setText(resultado.getString("segundo_apellido"));
                txtNumeroCellMain.setText(resultado.getString("numero_telefono"));
                txtEmailMain.setText(resultado.getString("email"));

            }
            
            //Como siempre Hacer commit y cerrar la conexion 
            con.commit();
            con.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_tableUsuariosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        //Capturamos el usuario introducido en el txtField
        String usuario = txtUsuarioMain.getText();
        
        try {
            //Probamos con un select a ver si existe
            Connection conPrueva = Conexion.getConnection();
            PreparedStatement prepararConsultaPrueva = conPrueva.prepareStatement("SELECT * FROM usuarios WHERE nombre_usuario = ?");
            prepararConsultaPrueva.setString(1, usuario);
            ResultSet resultadoPrueva = null;
            resultadoPrueva = prepararConsultaPrueva.executeQuery();
            conPrueva.commit();
            
            //Si existe pues procedemos a eliminarlo con un delet
            if (resultadoPrueva.next()) {
                Connection con = Conexion.getConnection();
                PreparedStatement preparaConsulta = con.prepareStatement("DELETE FROM usuarios WHERE nombre_usuario = ?");
                preparaConsulta.setString(1, usuario);

                preparaConsulta.execute();
                JOptionPane.showMessageDialog(null, "USUARIO ELIMINADO");
                
                //Recordar el commit y el close
                con.commit();
                con.close();
                CargarTabla();
                Limpiar();
            }else{
                JOptionPane.showMessageDialog(null, "EL USUARIO QUE INTENTA ELIMINAR NO EXISTE");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());

        }

    }//GEN-LAST:event_btnEliminarActionPerformed
    public void Limpiar() {
        txtUsuarioMain.setText("");
        passPasswordMain.setText("");
        passRepetirPasswordMain.setText("");
        txtPrimerNombreMain.setText("");
        txtSegundoNombreMain.setText("");
        txtPrimerApellidoMain.setText("");
        txtSegundoApellidoMain.setText("");
        txtNumeroCellMain.setText("");
        txtEmailMain.setText("");

    }

    //metodo para cargar datos a la tabla
    private void CargarTabla() {
        
        //Creamos un objeto de tipo DefaultTableModel y lo llamamos modeloTaclo 
        //lo igualamos =  (DefaultTableModel) la tabla del formulario usando el metodo getModel()
        DefaultTableModel modeloTabla = (DefaultTableModel) tableUsuarios.getModel();
        
        //Ya que tenemos nuestra tabla modelo ponemos que de inicio tenga 0 registros
        modeloTabla.setRowCount(0);

        PreparedStatement prepararConsulta;
        ResultSet resultado;
        
        //Para crear la tabla usamos el ResultSetMetaData ya que contiene todo los datos mas detallado
        //que un ResultSet Normal
        ResultSetMetaData resultadoMetadata;
        
        //Creamos una variable de tipo entero
        int columnas;

        try {
            //Ejecutamos la conexion y con un select seleccionamos cada registro con cada columna 
            //en la tabla de Oracle
            Connection con = Conexion.getConnection();
            prepararConsulta = con.prepareStatement("SELECT * FROM usuarios");
            resultado = prepararConsulta.executeQuery();
           
            //Al ResultSet le aplicamos el metodo getMetaData para guardarlo en el objeto ResultSetMetaData
            resultadoMetadata = resultado.getMetaData();
            
            //Ya teniendo nuesto objeto ResultSetMetaData con el metodo getColumnCount
            //Contamos las columnas de la tabla en Oracle y esa cantida como es un entero se guarda
            // en la variable columna
            columnas = resultadoMetadata.getColumnCount();
            
            //Con el While recorremos el ResultSet.next()
            while (resultado.next()) {
                
               //Creamos un objeto de tipo Object[] llamado fila que tendra el mimo numero
                //de columnas que la tabla en Oracle
                Object[] filas = new Object[columnas];
                
                //Con un for y utilizando la cantidad de columnas Creamos las filas que 
                //el modelo de la tabla en el formulario 
                for (int i = 0; i < columnas; i++) {
                    //Iremos Guardando los datos de la columnas de oracle al Object[] llamado filas
                    //usando el metodo getObject del objeto ResultSet
                    filas[i] = resultado.getObject(i + 1);
                }
                //Cuando la fila se completa con todas sus columnas se agrega al modelo de la tabla en el formulario
                //Este proceso se repetira el mismo numero de registro como se encuentren en la consulta a Oracle
                modeloTabla.addRow(filas);
            }
            
            //Siempre cerrar y hacer commit para que los datos se actualicen en la base de datos 
            con.commit();
            con.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

        txtUsuarioMain.requestFocus();

    }

    public boolean ValidarCampos() {
        boolean camposValidados = false;

        if (txtUsuarioMain.getText().length() != 0) {
            if (String.valueOf(passPasswordMain.getPassword()).length() != 0) {
                if (String.valueOf(passRepetirPasswordMain.getPassword()).length() != 0) {
                    if (txtPrimerNombreMain.getText().length() != 0) {
                        if (txtPrimerApellidoMain.getText().length() != 0) {
                            if (txtNumeroCellMain.getText().length() != 0) {
                                if (txtEmailMain.getText().length() != 0) {
                                    if (String.valueOf(passPasswordMain.getPassword()).equals(String.valueOf(passRepetirPasswordMain.getPassword()))) {
                                        camposValidados = true;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Los Campos de Password y Repetir Password \n No Coinciden");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "El Campo Correo Electronico Esta Vacio");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "El Campo Numero De Telefono Esta Vacio");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El Campo Primer Apellido Esta Vacio");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El Campo Primer Nombre Esta Vacio");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El Campo Repetir Password Esta Vacio");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Campo Password Esta Vacio");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El Campo Usuario Esta Vacio");
        }
        return camposValidados;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCerrarSeccion;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevoRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel laSegundoNombreMain;
    private javax.swing.JLabel lbCorreoMain;
    private javax.swing.JLabel lbNumeroCellMain;
    private javax.swing.JLabel lbPasswordMain;
    private javax.swing.JLabel lbPrimerApellidoMain;
    private javax.swing.JLabel lbPrimerNombreMain;
    private javax.swing.JLabel lbRepetirPasswordMain;
    private javax.swing.JLabel lbSegundoApellidoMain;
    private javax.swing.JLabel lbUsuarioMain;
    private javax.swing.JPasswordField passPasswordMain;
    private javax.swing.JPasswordField passRepetirPasswordMain;
    private javax.swing.JTable tableUsuarios;
    private javax.swing.JTextField txtEmailMain;
    private javax.swing.JTextField txtNumeroCellMain;
    private javax.swing.JTextField txtPrimerApellidoMain;
    private javax.swing.JTextField txtPrimerNombreMain;
    private javax.swing.JTextField txtSegundoApellidoMain;
    private javax.swing.JTextField txtSegundoNombreMain;
    private javax.swing.JTextField txtUsuarioMain;
    // End of variables declaration//GEN-END:variables
}
